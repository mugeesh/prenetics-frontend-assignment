{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { fetchResultsFormAPI } from './api';\nconst initialState = {\n  data: [],\n  meta: {\n    total: 0\n  },\n  status: 'pending'\n};\nexport const getResultsFromAPI = createAsyncThunk('result/getResults', async (_, {\n  getState\n}) => {\n  const state = getState();\n  const response = await fetchResultsFormAPI(state);\n  return response;\n});\nconst resultSlice = createSlice({\n  name: 'result',\n  initialState,\n  reducers: {\n    updateMeta: (state, action) => {\n      state.meta.total = action.payload.total;\n    },\n    updateData: (state, action) => {\n      state.data = action.payload.data;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getResultsFromAPI.pending, state => {\n      state.status = 'pending';\n      state.data = [];\n    });\n    builder.addCase(getResultsFromAPI.fulfilled, (state, {\n      payload\n    }) => {\n      state.status = 'fulfilled';\n      state.data = [...payload.data];\n      state.meta.total = payload.meta.total;\n    });\n    builder.addCase(getResultsFromAPI.rejected, state => {\n      state.status = 'rejected';\n      state.data = [];\n    });\n  }\n});\nexport const {\n  updateData,\n  updateMeta\n} = resultSlice.actions;\nexport const resultReducer = resultSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchResultsFormAPI","initialState","data","meta","total","status","getResultsFromAPI","_","getState","state","response","resultSlice","name","reducers","updateMeta","action","payload","updateData","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","resultReducer","reducer"],"sources":["/Users/mugeesh/Downloads/orginal/New_FE/prenetics-frontend-assignment/src/searchfeature/result.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\nimport { ResultType, ResultState } from \"../components/types/types\";\nimport { RootState } from \"../store/store\";\nimport { fetchResultsFormAPI } from './api';\n\nconst initialState: ResultState = {\n    data: [],\n    meta: {\n        total: 0\n    },\n    status: 'pending'\n}\n\nexport const getResultsFromAPI = createAsyncThunk(\n    'result/getResults',\n    async (_, { getState }) => {\n        const state: RootState = getState() as RootState;\n        const response = await fetchResultsFormAPI(state);\n        return response;\n    }\n);\n\nconst resultSlice = createSlice({\n    name: 'result',\n    initialState,\n    reducers: {\n        updateMeta: (state, action: PayloadAction<{ total: number }>) => {\n            state.meta.total = action.payload.total;\n        },\n        updateData: (state, action: PayloadAction<{ data: ResultType[] }>) => {\n            state.data = action.payload.data;\n        }\n    },\n    extraReducers: (builder) => {\n        builder.addCase(getResultsFromAPI.pending, (state) => {\n            state.status = 'pending'\n            state.data = [];\n        });\n        builder.addCase(getResultsFromAPI.fulfilled, (state, { payload }) => {\n            state.status = 'fulfilled';\n            state.data = [...payload!.data];\n            state.meta.total = payload!.meta.total;\n        });\n        builder.addCase(getResultsFromAPI.rejected, (state) => {\n            state.status = 'rejected';\n            state.data = [];\n        });\n    }\n});\n\nexport const { updateData, updateMeta }  = resultSlice.actions\nexport const resultReducer = resultSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAuB,kBAAkB;AAG/E,SAASC,mBAAmB,QAAQ,OAAO;AAE3C,MAAMC,YAAyB,GAAG;EAC9BC,IAAI,EAAE,EAAE;EACRC,IAAI,EAAE;IACFC,KAAK,EAAE;EACX,CAAC;EACDC,MAAM,EAAE;AACZ,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAGP,gBAAgB,CAC7C,mBAAmB,EACnB,OAAOQ,CAAC,EAAE;EAAEC;AAAS,CAAC,KAAK;EACvB,MAAMC,KAAgB,GAAGD,QAAQ,CAAC,CAAc;EAChD,MAAME,QAAQ,GAAG,MAAMV,mBAAmB,CAACS,KAAK,CAAC;EACjD,OAAOC,QAAQ;AACnB,CACJ,CAAC;AAED,MAAMC,WAAW,GAAGb,WAAW,CAAC;EAC5Bc,IAAI,EAAE,QAAQ;EACdX,YAAY;EACZY,QAAQ,EAAE;IACNC,UAAU,EAAEA,CAACL,KAAK,EAAEM,MAAwC,KAAK;MAC7DN,KAAK,CAACN,IAAI,CAACC,KAAK,GAAGW,MAAM,CAACC,OAAO,CAACZ,KAAK;IAC3C,CAAC;IACDa,UAAU,EAAEA,CAACR,KAAK,EAAEM,MAA6C,KAAK;MAClEN,KAAK,CAACP,IAAI,GAAGa,MAAM,CAACC,OAAO,CAACd,IAAI;IACpC;EACJ,CAAC;EACDgB,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAACd,iBAAiB,CAACe,OAAO,EAAGZ,KAAK,IAAK;MAClDA,KAAK,CAACJ,MAAM,GAAG,SAAS;MACxBI,KAAK,CAACP,IAAI,GAAG,EAAE;IACnB,CAAC,CAAC;IACFiB,OAAO,CAACC,OAAO,CAACd,iBAAiB,CAACgB,SAAS,EAAE,CAACb,KAAK,EAAE;MAAEO;IAAQ,CAAC,KAAK;MACjEP,KAAK,CAACJ,MAAM,GAAG,WAAW;MAC1BI,KAAK,CAACP,IAAI,GAAG,CAAC,GAAGc,OAAO,CAAEd,IAAI,CAAC;MAC/BO,KAAK,CAACN,IAAI,CAACC,KAAK,GAAGY,OAAO,CAAEb,IAAI,CAACC,KAAK;IAC1C,CAAC,CAAC;IACFe,OAAO,CAACC,OAAO,CAACd,iBAAiB,CAACiB,QAAQ,EAAGd,KAAK,IAAK;MACnDA,KAAK,CAACJ,MAAM,GAAG,UAAU;MACzBI,KAAK,CAACP,IAAI,GAAG,EAAE;IACnB,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEe,UAAU;EAAEH;AAAW,CAAC,GAAIH,WAAW,CAACa,OAAO;AAC9D,OAAO,MAAMC,aAAa,GAAGd,WAAW,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}